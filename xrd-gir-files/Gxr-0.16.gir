<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Gdk" version="3.0"/>
  <include name="GdkPixbuf" version="2.0"/>
  <include name="Graphene" version="1.0"/>
  <include name="Gulkan" version="0.16"/>
  <include name="cairo" version="1.0"/>
  <package name="gxr-0.16"/>
  <c:include name="gxr.h"/>
  <namespace name="Gxr"
             version="0.16"
             shared-library="libgxr-0.16.so.0"
             c:identifier-prefixes="Gxr"
             c:symbol-prefixes="gxr">
    <class name="Action"
           c:symbol-prefix="action"
           c:type="GxrAction"
           parent="GObject.Object"
           glib:type-name="GxrAction"
           glib:get-type="gxr_action_get_type"
           glib:type-struct="ActionClass">
      <source-position filename="src/gxr-action.h" line="23"/>
      <constructor name="new" c:identifier="gxr_action_new">
        <source-position filename="src/gxr-action.h" line="63"/>
        <return-value transfer-ownership="full">
          <type name="Action" c:type="GxrAction*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_type_url"
                   c:identifier="gxr_action_new_from_type_url">
        <source-position filename="src/gxr-action.h" line="66"/>
        <return-value transfer-ownership="full">
          <type name="Action" c:type="GxrAction*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </parameter>
          <parameter name="action_set" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="ActionType" c:type="GxrActionType"/>
          </parameter>
          <parameter name="url" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="sets_poll" c:identifier="gxr_action_sets_poll">
        <source-position filename="src/gxr-action-set.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="sets" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet**"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </function>
      <method name="emit_analog" c:identifier="gxr_action_emit_analog">
        <source-position filename="src/gxr-action.h" line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="AnalogEvent" c:type="GxrAnalogEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="emit_digital" c:identifier="gxr_action_emit_digital">
        <source-position filename="src/gxr-action.h" line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="DigitalEvent" c:type="GxrDigitalEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="emit_pose" c:identifier="gxr_action_emit_pose">
        <source-position filename="src/gxr-action.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="PoseEvent" c:type="GxrPoseEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_action_set"
              c:identifier="gxr_action_get_action_set"
              introspectable="0">
        <source-position filename="src/gxr-action.h" line="86"/>
        <return-value>
          <type name="ActionSet" c:type="GxrActionSet*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_action_type" c:identifier="gxr_action_get_action_type">
        <source-position filename="src/gxr-action.h" line="83"/>
        <return-value transfer-ownership="none">
          <type name="ActionType" c:type="GxrActionType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_handle"
              c:identifier="gxr_action_get_handle"
              introspectable="0">
        <source-position filename="src/gxr-action.h" line="126"/>
        <return-value>
          <!-- this is XrAction -->
          <type name="gpointer" c:type="void*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_haptic_action"
              c:identifier="gxr_action_get_haptic_action"
              introspectable="0">
        <source-position filename="src/gxr-action.h" line="129"/>
        <return-value>
          <type name="Action" c:type="GxrAction*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_num_bindings"
              c:identifier="gxr_action_get_num_bindings">
        <source-position filename="src/gxr-action.h" line="120"/>
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="uint32_t"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_url" c:identifier="gxr_action_get_url">
        <source-position filename="src/gxr-action.h" line="89"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="poll" c:identifier="gxr_action_poll">
        <source-position filename="src/gxr-action.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_action_set" c:identifier="gxr_action_set_action_set">
        <source-position filename="src/gxr-action.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="action_set" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_action_type" c:identifier="gxr_action_set_action_type">
        <source-position filename="src/gxr-action.h" line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="ActionType" c:type="GxrActionType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_bindings"
              c:identifier="gxr_action_set_bindings"
              introspectable="0">
        <source-position filename="src/gxr-action.h" line="123"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="bindings" transfer-ownership="none">
            <!-- this is XrActionSuggestedBinding -->
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_digital_from_float_haptic"
              c:identifier="gxr_action_set_digital_from_float_haptic">
        <source-position filename="src/gxr-action.h" line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="haptic_action" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_digital_from_float_threshold"
              c:identifier="gxr_action_set_digital_from_float_threshold">
        <source-position filename="src/gxr-action.h" line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="threshold" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_url" c:identifier="gxr_action_set_url">
        <source-position filename="src/gxr-action.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="trigger_haptic" c:identifier="gxr_action_trigger_haptic">
        <source-position filename="src/gxr-action.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="start_seconds_from_now" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="duration_seconds" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="frequency" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="amplitude" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="controller_handle" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_controllers"
              c:identifier="gxr_action_update_controllers">
        <source-position filename="src/gxr-action.h" line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <glib:signal name="analog-event" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Gdk.Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="digital-event" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Gdk.Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="pose-event" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Gdk.Event"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ActionClass"
            c:type="GxrActionClass"
            glib:is-gtype-struct-for="Action">
      <source-position filename="src/gxr-action.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="ActionManifestEntry" c:type="GxrActionManifestEntry">
      <source-position filename="src/gxr-manifest.h" line="84"/>
      <field name="name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="type" writable="1">
        <type name="BindingType" c:type="GxrBindingType"/>
      </field>
    </record>
    <class name="ActionSet"
           c:symbol-prefix="action_set"
           c:type="GxrActionSet"
           parent="GObject.Object"
           glib:type-name="GxrActionSet"
           glib:get-type="gxr_action_set_get_type"
           glib:type-struct="ActionSetClass">
      <source-position filename="src/gxr-action-set.h" line="24"/>
      <constructor name="new_from_url"
                   c:identifier="gxr_action_set_new_from_url">
        <source-position filename="src/gxr-action-set.h" line="36"/>
        <return-value transfer-ownership="full">
          <type name="ActionSet" c:type="GxrActionSet*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </parameter>
          <parameter name="manifest" transfer-ownership="none">
            <type name="Manifest" c:type="GxrManifest*"/>
          </parameter>
          <parameter name="url" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="append_action" c:identifier="gxr_action_set_append_action">
        <source-position filename="src/gxr-action-set.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet*"/>
          </instance-parameter>
          <parameter name="action" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect"
              c:identifier="gxr_action_set_connect"
              introspectable="0">
        <source-position filename="src/gxr-action-set.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="ActionType" c:type="GxrActionType"/>
          </parameter>
          <parameter name="url" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none" closure="3">
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_digital_from_float"
              c:identifier="gxr_action_set_connect_digital_from_float"
              introspectable="0">
        <source-position filename="src/gxr-action-set.h" line="51"/>
        <return-value>
          <type name="Action" c:type="GxrAction*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="threshold" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="haptic_url" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none" closure="4">
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_actions"
              c:identifier="gxr_action_set_get_actions"
              introspectable="0">
        <source-position filename="src/gxr-action-set.h" line="59"/>
        <return-value>
          <type name="GLib.SList" c:type="GSList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_handle"
              c:identifier="gxr_action_set_get_handle"
              introspectable="0">
        <source-position filename="src/gxr-action-set.h" line="62"/>
        <return-value>
          <!-- this is XrActionSet -->
          <type name="gpointer" c:type="void*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_manifest"
              c:identifier="gxr_action_set_get_manifest"
              introspectable="0">
        <source-position filename="src/gxr-action-set.h" line="65"/>
        <return-value>
          <type name="Manifest" c:type="GxrManifest*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="ActionSetClass"
            c:type="GxrActionSetClass"
            glib:is-gtype-struct-for="ActionSet">
      <source-position filename="src/gxr-action-set.h" line="24"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="ActionType" c:type="GxrActionType">
      <doc xml:space="preserve"
           filename="src/gxr-action.h"
           line="39">The type of the GxrAction.</doc>
      <source-position filename="src/gxr-action.h" line="60"/>
      <member name="digital" value="0" c:identifier="GXR_ACTION_DIGITAL">
        <doc xml:space="preserve"
             filename="src/gxr-action.h"
             line="41">A digital action.</doc>
      </member>
      <member name="digital_from_float"
              value="1"
              c:identifier="GXR_ACTION_DIGITAL_FROM_FLOAT">
        <doc xml:space="preserve"
             filename="src/gxr-action.h"
             line="42">A digital action constructed from float
thresholds.</doc>
      </member>
      <member name="vec2f" value="2" c:identifier="GXR_ACTION_VEC2F">
        <doc xml:space="preserve"
             filename="src/gxr-action.h"
             line="44">An analog action with floats x,y.</doc>
      </member>
      <member name="float" value="3" c:identifier="GXR_ACTION_FLOAT">
        <doc xml:space="preserve"
             filename="src/gxr-action.h"
             line="45">An analog action.</doc>
      </member>
      <member name="pose" value="4" c:identifier="GXR_ACTION_POSE">
        <doc xml:space="preserve"
             filename="src/gxr-action.h"
             line="46">A pose action.</doc>
      </member>
      <member name="haptic" value="5" c:identifier="GXR_ACTION_HAPTIC">
        <doc xml:space="preserve"
             filename="src/gxr-action.h"
             line="47">A haptic action.</doc>
      </member>
    </enumeration>
    <record name="AnalogEvent" c:type="GxrAnalogEvent">
      <doc xml:space="preserve"
           filename="src/gxr-controller.h"
           line="43">Analog event.</doc>
      <source-position filename="src/gxr-controller.h" line="62"/>
      <field name="active" writable="1">
        <doc xml:space="preserve"
             filename="src/gxr-controller.h"
             line="45">Whether or not this action is currently available to be bound in the
active action set.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="state" writable="1">
        <doc xml:space="preserve"
             filename="src/gxr-controller.h"
             line="47">A #graphene_vec3_t analog state.</doc>
        <type name="Graphene.Vec3" c:type="graphene_vec3_t"/>
      </field>
      <field name="delta" writable="1">
        <doc xml:space="preserve"
             filename="src/gxr-controller.h"
             line="48">State delta since last event.</doc>
        <type name="Graphene.Vec3" c:type="graphene_vec3_t"/>
      </field>
      <field name="controller" writable="1">
        <doc xml:space="preserve"
             filename="src/gxr-controller.h"
             line="49">The controller identifier.</doc>
        <type name="Controller" c:type="GxrController*"/>
      </field>
      <field name="time" writable="1">
        <doc xml:space="preserve"
             filename="src/gxr-controller.h"
             line="50">The time of the event.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
    </record>
    <record name="Binding" c:type="GxrBinding">
      <source-position filename="src/gxr-manifest.h" line="97"/>
      <field name="action" writable="1">
        <type name="ActionManifestEntry" c:type="GxrActionManifestEntry*"/>
      </field>
      <field name="input_paths" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
    </record>
    <enumeration name="BindingComponent" c:type="GxrBindingComponent">
      <doc xml:space="preserve"
           filename="src/gxr-manifest.h"
           line="56">The component of the GxrBindingPath.</doc>
      <source-position filename="src/gxr-manifest.h" line="78"/>
      <member name="none" value="0" c:identifier="GXR_BINDING_COMPONENT_NONE">
        <doc xml:space="preserve"
             filename="src/gxr-manifest.h"
             line="58">None.</doc>
      </member>
      <member name="unknown"
              value="1"
              c:identifier="GXR_BINDING_COMPONENT_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/gxr-manifest.h"
             line="59">Unknown.</doc>
      </member>
      <member name="click"
              value="2"
              c:identifier="GXR_BINDING_COMPONENT_CLICK">
        <doc xml:space="preserve"
             filename="src/gxr-manifest.h"
             line="60">Click.</doc>
      </member>
      <member name="pull" value="3" c:identifier="GXR_BINDING_COMPONENT_PULL">
        <doc xml:space="preserve"
             filename="src/gxr-manifest.h"
             line="61">Pull.</doc>
      </member>
      <member name="position"
              value="4"
              c:identifier="GXR_BINDING_COMPONENT_POSITION">
        <doc xml:space="preserve"
             filename="src/gxr-manifest.h"
             line="62">Position.</doc>
      </member>
      <member name="touch"
              value="5"
              c:identifier="GXR_BINDING_COMPONENT_TOUCH">
        <doc xml:space="preserve"
             filename="src/gxr-manifest.h"
             line="63">Touch.</doc>
      </member>
      <member name="force"
              value="6"
              c:identifier="GXR_BINDING_COMPONENT_FORCE">
        <doc xml:space="preserve"
             filename="src/gxr-manifest.h"
             line="64">Force.</doc>
      </member>
    </enumeration>
    <record name="BindingManifest" c:type="GxrBindingManifest">
      <source-position filename="src/gxr-manifest.h" line="108"/>
      <field name="filename" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="gxr_bindings" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="interaction_profile" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
    </record>
    <enumeration name="BindingMode" c:type="GxrBindingMode">
      <doc xml:space="preserve"
           filename="src/gxr-manifest.h"
           line="36">The mode of the GxrBinding.</doc>
      <source-position filename="src/gxr-manifest.h" line="54"/>
      <member name="none" value="0" c:identifier="GXR_BINDING_MODE_NONE">
        <doc xml:space="preserve"
             filename="src/gxr-manifest.h"
             line="38">None.</doc>
      </member>
      <member name="unknown" value="1" c:identifier="GXR_BINDING_MODE_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/gxr-manifest.h"
             line="39">Unknown.</doc>
      </member>
      <member name="button" value="2" c:identifier="GXR_BINDING_MODE_BUTTON">
        <doc xml:space="preserve"
             filename="src/gxr-manifest.h"
             line="40">Button.</doc>
      </member>
      <member name="trackpad"
              value="3"
              c:identifier="GXR_BINDING_MODE_TRACKPAD">
        <doc xml:space="preserve"
             filename="src/gxr-manifest.h"
             line="41">Trackpad.</doc>
      </member>
      <member name="analog_stick"
              value="4"
              c:identifier="GXR_BINDING_MODE_ANALOG_STICK">
        <doc xml:space="preserve"
             filename="src/gxr-manifest.h"
             line="42">Thumbstick.</doc>
      </member>
    </enumeration>
    <record name="BindingPath" c:type="GxrBindingPath">
      <source-position filename="src/gxr-manifest.h" line="91"/>
      <field name="component" writable="1">
        <type name="BindingComponent" c:type="GxrBindingComponent"/>
      </field>
      <field name="path" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="mode" writable="1">
        <type name="BindingMode" c:type="GxrBindingMode"/>
      </field>
    </record>
    <enumeration name="BindingType" c:type="GxrBindingType">
      <doc xml:space="preserve"
           filename="src/gxr-manifest.h"
           line="14">The type of GxrBinding.</doc>
      <source-position filename="src/gxr-manifest.h" line="34"/>
      <member name="unknown" value="0" c:identifier="GXR_BINDING_TYPE_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/gxr-manifest.h"
             line="16">An unknown binding type.</doc>
      </member>
      <member name="pose" value="1" c:identifier="GXR_BINDING_TYPE_POSE">
        <doc xml:space="preserve"
             filename="src/gxr-manifest.h"
             line="17">A pose binding type.</doc>
      </member>
      <member name="boolean" value="2" c:identifier="GXR_BINDING_TYPE_BOOLEAN">
        <doc xml:space="preserve"
             filename="src/gxr-manifest.h"
             line="18">A pose boolean type.</doc>
      </member>
      <member name="float" value="3" c:identifier="GXR_BINDING_TYPE_FLOAT">
        <doc xml:space="preserve"
             filename="src/gxr-manifest.h"
             line="19">A pose float type.</doc>
      </member>
      <member name="vec2" value="4" c:identifier="GXR_BINDING_TYPE_VEC2">
        <doc xml:space="preserve"
             filename="src/gxr-manifest.h"
             line="20">A pose vec2 type.</doc>
      </member>
      <member name="haptic" value="5" c:identifier="GXR_BINDING_TYPE_HAPTIC">
        <doc xml:space="preserve"
             filename="src/gxr-manifest.h"
             line="21">A pose haptic type.</doc>
      </member>
    </enumeration>
    <class name="Context"
           c:symbol-prefix="context"
           c:type="GxrContext"
           parent="GObject.Object"
           glib:type-name="GxrContext"
           glib:get-type="gxr_context_get_type"
           glib:type-struct="ContextClass">
      <source-position filename="src/gxr-context.h" line="27"/>
      <constructor name="new" c:identifier="gxr_context_new">
        <source-position filename="src/gxr-context.h" line="97"/>
        <return-value transfer-ownership="full">
          <type name="Context" c:type="GxrContext*"/>
        </return-value>
        <parameters>
          <parameter name="app_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="app_version" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_vulkan_extensions"
                   c:identifier="gxr_context_new_from_vulkan_extensions"
                   introspectable="0">
        <source-position filename="src/gxr-context.h" line="100"/>
        <return-value transfer-ownership="full">
          <type name="Context" c:type="GxrContext*"/>
        </return-value>
        <parameters>
          <parameter name="instance_ext_list" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="device_ext_list" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="app_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="app_version" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="attach_action_sets"
              c:identifier="gxr_context_attach_action_sets">
        <source-position filename="src/gxr-context.h" line="179"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="sets" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet**"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </method>
      <method name="begin_frame" c:identifier="gxr_context_begin_frame">
        <source-position filename="src/gxr-context.h" line="142"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="end_frame" c:identifier="gxr_context_end_frame">
        <source-position filename="src/gxr-context.h" line="145"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_acquired_framebuffer"
              c:identifier="gxr_context_get_acquired_framebuffer"
              introspectable="0">
        <source-position filename="src/gxr-context.h" line="167"/>
        <return-value>
          <type name="Gulkan.FrameBuffer" c:type="GulkanFrameBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_buffer_index"
              c:identifier="gxr_context_get_buffer_index">
        <source-position filename="src/gxr-context.h" line="176"/>
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="uint32_t"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device_manager"
              c:identifier="gxr_context_get_device_manager"
              introspectable="0">
        <source-position filename="src/gxr-context.h" line="161"/>
        <return-value>
          <type name="DeviceManager" c:type="GxrDeviceManager*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_eye_position"
              c:identifier="gxr_context_get_eye_position">
        <source-position filename="src/gxr-context.h" line="136"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="eye" transfer-ownership="none">
            <type name="Eye" c:type="GxrEye"/>
          </parameter>
          <parameter name="v" transfer-ownership="none">
            <type name="Graphene.Vec3" c:type="graphene_vec3_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_framebuffer_at"
              c:identifier="gxr_context_get_framebuffer_at"
              introspectable="0">
        <source-position filename="src/gxr-context.h" line="170"/>
        <return-value>
          <type name="Gulkan.FrameBuffer" c:type="GulkanFrameBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_frustum_angles"
              c:identifier="gxr_context_get_frustum_angles">
        <source-position filename="src/gxr-context.h" line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="eye" transfer-ownership="none">
            <type name="Eye" c:type="GxrEye"/>
          </parameter>
          <parameter name="left" transfer-ownership="none">
            <type name="gfloat" c:type="float*"/>
          </parameter>
          <parameter name="right" transfer-ownership="none">
            <type name="gfloat" c:type="float*"/>
          </parameter>
          <parameter name="top" transfer-ownership="none">
            <type name="gfloat" c:type="float*"/>
          </parameter>
          <parameter name="bottom" transfer-ownership="none">
            <type name="gfloat" c:type="float*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_gulkan"
              c:identifier="gxr_context_get_gulkan"
              introspectable="0">
        <source-position filename="src/gxr-context.h" line="151"/>
        <return-value>
          <type name="Gulkan.Context" c:type="GulkanContext*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_head_pose" c:identifier="gxr_context_get_head_pose">
        <source-position filename="src/gxr-context.h" line="106"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="pose" transfer-ownership="none">
            <type name="Graphene.Matrix" c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_projection" c:identifier="gxr_context_get_projection">
        <source-position filename="src/gxr-context.h" line="126"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="eye" transfer-ownership="none">
            <type name="Eye" c:type="GxrEye"/>
          </parameter>
          <parameter name="near" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="far" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="mat" transfer-ownership="none">
            <type name="Graphene.Matrix" c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_runtime_device_extensions"
              c:identifier="gxr_context_get_runtime_device_extensions"
              introspectable="0">
        <source-position filename="src/gxr-context.h" line="158"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="out_list" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList**">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="get_runtime_instance_extensions"
              c:identifier="gxr_context_get_runtime_instance_extensions"
              introspectable="0">
        <source-position filename="src/gxr-context.h" line="154"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="out_list" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList**">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="get_swapchain_extent"
              c:identifier="gxr_context_get_swapchain_extent"
              introspectable="0">
        <source-position filename="src/gxr-context.h" line="173"/>
        <return-value>
          <type name="Vulkan.Extent2D" c:type="VkExtent2D"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="view_index" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_swapchain_length"
              c:identifier="gxr_context_get_swapchain_length">
        <source-position filename="src/gxr-context.h" line="164"/>
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="uint32_t"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_view" c:identifier="gxr_context_get_view">
        <source-position filename="src/gxr-context.h" line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="eye" transfer-ownership="none">
            <type name="Eye" c:type="GxrEye"/>
          </parameter>
          <parameter name="mat" transfer-ownership="none">
            <type name="Graphene.Matrix" c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="init_framebuffers"
              c:identifier="gxr_context_init_framebuffers">
        <source-position filename="src/gxr-context.h" line="117"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="extent" transfer-ownership="none">
            <type name="Vulkan.Extent2D" c:type="VkExtent2D"/>
          </parameter>
          <parameter name="sample_count" transfer-ownership="none">
            <type name="Vulkan.SampleCountFlagBits"
                  c:type="VkSampleCountFlagBits"/>
          </parameter>
          <parameter name="render_pass" transfer-ownership="none">
            <type name="Gulkan.RenderPass" c:type="GulkanRenderPass**"/>
          </parameter>
        </parameters>
      </method>
      <method name="poll_events" c:identifier="gxr_context_poll_events">
        <source-position filename="src/gxr-context.h" line="123"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="request_quit" c:identifier="gxr_context_request_quit">
        <source-position filename="src/gxr-context.h" line="148"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="wait_frame" c:identifier="gxr_context_wait_frame">
        <source-position filename="src/gxr-context.h" line="139"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <glib:signal name="overlay-event" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="state-change-event" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ContextClass"
            c:type="GxrContextClass"
            glib:is-gtype-struct-for="Context">
      <source-position filename="src/gxr-context.h" line="27"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Controller"
           c:symbol-prefix="controller"
           c:type="GxrController"
           parent="Device"
           glib:type-name="GxrController"
           glib:get-type="gxr_controller_get_type"
           glib:type-struct="ControllerClass">
      <source-position filename="src/gxr-controller.h" line="19"/>
      <constructor name="new" c:identifier="gxr_controller_new">
        <source-position filename="src/gxr-controller.h" line="92"/>
        <return-value transfer-ownership="full">
          <type name="Controller" c:type="GxrController*"/>
        </return-value>
        <parameters>
          <parameter name="controller_handle" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_hand_grip_pose"
              c:identifier="gxr_controller_get_hand_grip_pose">
        <source-position filename="src/gxr-controller.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
          <parameter name="pose" transfer-ownership="none">
            <type name="Graphene.Matrix" c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pointer_pose"
              c:identifier="gxr_controller_get_pointer_pose">
        <source-position filename="src/gxr-controller.h" line="108"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
          <parameter name="pose" transfer-ownership="none">
            <type name="Graphene.Matrix" c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_pointer_pose_valid"
              c:identifier="gxr_controller_is_pointer_pose_valid">
        <source-position filename="src/gxr-controller.h" line="105"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="update_hand_grip_pose"
              c:identifier="gxr_controller_update_hand_grip_pose">
        <source-position filename="src/gxr-controller.h" line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="PoseEvent" c:type="GxrPoseEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_pointer_pose"
              c:identifier="gxr_controller_update_pointer_pose">
        <source-position filename="src/gxr-controller.h" line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="PoseEvent" c:type="GxrPoseEvent*"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="move" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ControllerClass"
            c:type="GxrControllerClass"
            glib:is-gtype-struct-for="Controller">
      <source-position filename="src/gxr-controller.h" line="19"/>
      <field name="parent_class">
        <type name="DeviceClass" c:type="GxrDeviceClass"/>
      </field>
    </record>
    <constant name="DEVICE_INDEX_MAX" value="64" c:type="GXR_DEVICE_INDEX_MAX">
      <source-position filename="src/gxr-context.h" line="24"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="Device"
           c:symbol-prefix="device"
           c:type="GxrDevice"
           parent="GObject.Object"
           glib:type-name="GxrDevice"
           glib:get-type="gxr_device_get_type"
           glib:type-struct="DeviceClass">
      <source-position filename="src/gxr-device.h" line="30"/>
      <constructor name="new" c:identifier="gxr_device_new">
        <source-position filename="src/gxr-device.h" line="33"/>
        <return-value transfer-ownership="full">
          <type name="Device" c:type="GxrDevice*"/>
        </return-value>
        <parameters>
          <parameter name="device_id" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_handle" c:identifier="gxr_device_get_handle">
        <source-position filename="src/gxr-device.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Device" c:type="GxrDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transformation_direct"
              c:identifier="gxr_device_get_transformation_direct">
        <source-position filename="src/gxr-device.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Device" c:type="GxrDevice*"/>
          </instance-parameter>
          <parameter name="mat" transfer-ownership="none">
            <type name="Graphene.Matrix" c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="initialize" c:identifier="gxr_device_initialize">
        <source-position filename="src/gxr-device.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Device" c:type="GxrDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_controller" c:identifier="gxr_device_is_controller">
        <source-position filename="src/gxr-device.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Device" c:type="GxrDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_pose_valid" c:identifier="gxr_device_is_pose_valid">
        <source-position filename="src/gxr-device.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Device" c:type="GxrDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_handle" c:identifier="gxr_device_set_handle">
        <source-position filename="src/gxr-device.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Device" c:type="GxrDevice*"/>
          </instance-parameter>
          <parameter name="handle" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_pose_valid"
              c:identifier="gxr_device_set_is_pose_valid">
        <source-position filename="src/gxr-device.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Device" c:type="GxrDevice*"/>
          </instance-parameter>
          <parameter name="valid" transfer-ownership="none">
            <type name="gboolean" c:type="_Bool"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transformation_direct"
              c:identifier="gxr_device_set_transformation_direct">
        <source-position filename="src/gxr-device.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Device" c:type="GxrDevice*"/>
          </instance-parameter>
          <parameter name="mat" transfer-ownership="none">
            <type name="Graphene.Matrix" c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="DeviceClass"
            c:type="GxrDeviceClass"
            glib:is-gtype-struct-for="Device">
      <source-position filename="src/gxr-device.h" line="30"/>
      <field name="parent">
        <doc xml:space="preserve"
             filename="src/gxr-device.h"
             line="25">The parent class</doc>
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="DeviceManager"
           c:symbol-prefix="device_manager"
           c:type="GxrDeviceManager"
           parent="GObject.Object"
           glib:type-name="GxrDeviceManager"
           glib:get-type="gxr_device_manager_get_type"
           glib:type-struct="DeviceManagerClass">
      <source-position filename="src/gxr-device-manager.h" line="20"/>
      <constructor name="new" c:identifier="gxr_device_manager_new">
        <source-position filename="src/gxr-device-manager.h" line="46"/>
        <return-value transfer-ownership="full">
          <type name="DeviceManager" c:type="GxrDeviceManager*"/>
        </return-value>
      </constructor>
      <method name="add" c:identifier="gxr_device_manager_add">
        <source-position filename="src/gxr-device-manager.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DeviceManager" c:type="GxrDeviceManager*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="is_controller" transfer-ownership="none">
            <type name="gboolean" c:type="_Bool"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_pose_actions"
              c:identifier="gxr_device_manager_connect_pose_actions">
        <source-position filename="src/gxr-device-manager.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DeviceManager" c:type="GxrDeviceManager*"/>
          </instance-parameter>
          <parameter name="action_set" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet*"/>
          </parameter>
          <parameter name="pointer_pose_url" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="hand_grip_pose_url" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get"
              c:identifier="gxr_device_manager_get"
              introspectable="0">
        <source-position filename="src/gxr-device-manager.h" line="63"/>
        <return-value>
          <type name="Device" c:type="GxrDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DeviceManager" c:type="GxrDeviceManager*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_controllers"
              c:identifier="gxr_device_manager_get_controllers"
              introspectable="0">
        <source-position filename="src/gxr-device-manager.h" line="60"/>
        <return-value>
          <type name="GLib.SList" c:type="GSList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DeviceManager" c:type="GxrDeviceManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_devices"
              c:identifier="gxr_device_manager_get_devices"
              introspectable="0">
        <source-position filename="src/gxr-device-manager.h" line="66"/>
        <return-value>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DeviceManager" c:type="GxrDeviceManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove" c:identifier="gxr_device_manager_remove">
        <source-position filename="src/gxr-device-manager.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DeviceManager" c:type="GxrDeviceManager*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_poses"
              c:identifier="gxr_device_manager_update_poses">
        <source-position filename="src/gxr-device-manager.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DeviceManager" c:type="GxrDeviceManager*"/>
          </instance-parameter>
          <parameter name="poses" transfer-ownership="none">
            <type name="Pose" c:type="GxrPose*"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="device-activate-event" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="device-deactivate-event" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DeviceManagerClass"
            c:type="GxrDeviceManagerClass"
            glib:is-gtype-struct-for="DeviceManager">
      <source-position filename="src/gxr-device-manager.h" line="20"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="DigitalEvent" c:type="GxrDigitalEvent">
      <doc xml:space="preserve"
           filename="src/gxr-controller.h"
           line="21">Digital event.</doc>
      <source-position filename="src/gxr-controller.h" line="40"/>
      <field name="active" writable="1">
        <doc xml:space="preserve"
             filename="src/gxr-controller.h"
             line="23">Whether or not this action is currently available to be bound in the
active action set.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="state" writable="1">
        <doc xml:space="preserve"
             filename="src/gxr-controller.h"
             line="25">Pressed or released.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="changed" writable="1">
        <doc xml:space="preserve"
             filename="src/gxr-controller.h"
             line="26">Whether the state has changed since last event.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="controller" writable="1">
        <doc xml:space="preserve"
             filename="src/gxr-controller.h"
             line="27">The controller identifier.</doc>
        <type name="Controller" c:type="GxrController*"/>
      </field>
      <field name="time" writable="1">
        <doc xml:space="preserve"
             filename="src/gxr-controller.h"
             line="28">The time of the event.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
    </record>
    <enumeration name="Eye" c:type="GxrEye">
      <doc xml:space="preserve"
           filename="src/gxr-context.h"
           line="38">Type of Gxr viewport.</doc>
      <source-position filename="src/gxr-context.h" line="50"/>
      <member name="left" value="0" c:identifier="GXR_EYE_LEFT">
        <doc xml:space="preserve"
             filename="src/gxr-context.h"
             line="40">Left eye.</doc>
      </member>
      <member name="right" value="1" c:identifier="GXR_EYE_RIGHT">
        <doc xml:space="preserve"
             filename="src/gxr-context.h"
             line="41">Right eye.</doc>
      </member>
    </enumeration>
    <class name="Manifest"
           c:symbol-prefix="manifest"
           c:type="GxrManifest"
           parent="GObject.Object"
           glib:type-name="GxrManifest"
           glib:get-type="gxr_manifest_get_type"
           glib:type-struct="ManifestClass">
      <source-position filename="src/gxr-manifest.h" line="113"/>
      <constructor name="new" c:identifier="gxr_manifest_new">
        <source-position filename="src/gxr-manifest.h" line="116"/>
        <return-value transfer-ownership="full">
          <type name="Manifest" c:type="GxrManifest*"/>
        </return-value>
        <parameters>
          <parameter name="resource_path" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="manifest_name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_binding_filenames"
              c:identifier="gxr_manifest_get_binding_filenames"
              introspectable="0">
        <source-position filename="src/gxr-manifest.h" line="125"/>
        <return-value>
          <type name="GLib.SList" c:type="GSList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Manifest" c:type="GxrManifest*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_binding_manifests"
              c:identifier="gxr_manifest_get_binding_manifests"
              introspectable="0">
        <source-position filename="src/gxr-manifest.h" line="129"/>
        <return-value>
          <type name="GLib.SList" c:type="GSList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="manifest" transfer-ownership="none">
            <type name="Manifest" c:type="GxrManifest*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="load_actions" c:identifier="gxr_manifest_load_actions">
        <source-position filename="src/gxr-manifest.h" line="119"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Manifest" c:type="GxrManifest*"/>
          </instance-parameter>
          <parameter name="action_stream" transfer-ownership="none">
            <type name="Gio.InputStream" c:type="GInputStream*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_bindings" c:identifier="gxr_manifest_load_bindings">
        <source-position filename="src/gxr-manifest.h" line="122"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Manifest" c:type="GxrManifest*"/>
          </instance-parameter>
          <parameter name="resource_path" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="ManifestClass"
            c:type="GxrManifestClass"
            glib:is-gtype-struct-for="Manifest">
      <source-position filename="src/gxr-manifest.h" line="113"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="OverlayEvent" c:type="GxrOverlayEvent">
      <doc xml:space="preserve"
           filename="src/gxr-context.h"
           line="85">Event that is emitted when running in OpenXR overlay mode.</doc>
      <source-position filename="src/gxr-context.h" line="94"/>
      <field name="main_session_visible" writable="1">
        <doc xml:space="preserve"
             filename="src/gxr-context.h"
             line="87">If a Main session is visible after this event.</doc>
        <type name="gboolean" c:type="_Bool"/>
      </field>
    </record>
    <record name="Pose" c:type="GxrPose">
      <doc xml:space="preserve"
           filename="src/gxr-device-manager.h"
           line="30">A 4x4 matrix pose.</doc>
      <source-position filename="src/gxr-device-manager.h" line="42"/>
      <field name="transformation" writable="1">
        <doc xml:space="preserve"
             filename="src/gxr-device-manager.h"
             line="32">The #graphene_matrix_t.</doc>
        <type name="Graphene.Matrix" c:type="graphene_matrix_t"/>
      </field>
      <field name="is_valid" writable="1">
        <doc xml:space="preserve"
             filename="src/gxr-device-manager.h"
             line="33">Validity of the pose.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </field>
    </record>
    <record name="PoseEvent" c:type="GxrPoseEvent">
      <doc xml:space="preserve"
           filename="src/gxr-controller.h"
           line="65">Pose event.</doc>
      <source-position filename="src/gxr-controller.h" line="88"/>
      <field name="active" writable="1">
        <doc xml:space="preserve"
             filename="src/gxr-controller.h"
             line="67">Whether or not this action is currently available to be bound in the
active action set.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="pose" writable="1">
        <doc xml:space="preserve"
             filename="src/gxr-controller.h"
             line="69">The #graphene_matrix_t pose.</doc>
        <type name="Graphene.Matrix" c:type="graphene_matrix_t"/>
      </field>
      <field name="velocity" writable="1">
        <doc xml:space="preserve"
             filename="src/gxr-controller.h"
             line="70">Velocity</doc>
        <type name="Graphene.Vec3" c:type="graphene_vec3_t"/>
      </field>
      <field name="angular_velocity" writable="1">
        <doc xml:space="preserve"
             filename="src/gxr-controller.h"
             line="71">Angular velocity.</doc>
        <type name="Graphene.Vec3" c:type="graphene_vec3_t"/>
      </field>
      <field name="valid" writable="1">
        <doc xml:space="preserve"
             filename="src/gxr-controller.h"
             line="72">Whether the pose is valid.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="device_connected" writable="1">
        <doc xml:space="preserve"
             filename="src/gxr-controller.h"
             line="73">Whether the device is currently connected.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="controller" writable="1">
        <doc xml:space="preserve"
             filename="src/gxr-controller.h"
             line="74">The controller identifier.</doc>
        <type name="Controller" c:type="GxrController*"/>
      </field>
    </record>
    <enumeration name="StateChange" c:type="GxrStateChange">
      <source-position filename="src/gxr-context.h" line="72"/>
      <member name="framecycle_start"
              value="0"
              c:identifier="GXR_STATE_FRAMECYCLE_START">
        <doc xml:space="preserve"
             filename="src/gxr-context.h"
             line="54">Ready to call gxr_context_begin_frame /
 gxr_context_end_frame.</doc>
      </member>
      <member name="framecycle_stop"
              value="1"
              c:identifier="GXR_STATE_FRAMECYCLE_STOP">
        <doc xml:space="preserve"
             filename="src/gxr-context.h"
             line="56">Not ready to call gxr_context_begin_frame /
 gxr_context_end_frame.</doc>
      </member>
      <member name="rendering_start"
              value="2"
              c:identifier="GXR_STATE_RENDERING_START">
        <doc xml:space="preserve"
             filename="src/gxr-context.h"
             line="58">The frame content will be shown in XR.</doc>
      </member>
      <member name="rendering_stop"
              value="3"
              c:identifier="GXR_STATE_RENDERING_STOP">
        <doc xml:space="preserve"
             filename="src/gxr-context.h"
             line="59">The frame content will not be visible, expensive
 rendering work can be skipped, but  gxr_context_begin_frame /
  gxr_context_end_frame should be called.</doc>
      </member>
      <member name="shutdown" value="4" c:identifier="GXR_STATE_SHUTDOWN">
        <doc xml:space="preserve"
             filename="src/gxr-context.h"
             line="62">XR Runtime is shutting down.</doc>
      </member>
    </enumeration>
    <record name="StateChangeEvent" c:type="GxrStateChangeEvent">
      <doc xml:space="preserve"
           filename="src/gxr-context.h"
           line="74">Event that is emitted when the application needs to quit.</doc>
      <source-position filename="src/gxr-context.h" line="83"/>
      <field name="state_change" writable="1">
        <doc xml:space="preserve"
             filename="src/gxr-context.h"
             line="76">The #GxrStateChange.</doc>
        <type name="StateChange" c:type="GxrStateChange"/>
      </field>
    </record>
    <record name="_ActionClass" c:type="_GxrActionClass">
      <source-position filename="src/gxr-action.h" line="37"/>
      <field name="parent" writable="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="_ActionSetClass" c:type="_GxrActionSetClass">
      <source-position filename="src/gxr-action-set.h" line="33"/>
      <field name="parent" writable="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="_ContextClass" c:type="_GxrContextClass">
      <source-position filename="src/gxr-context.h" line="36"/>
      <field name="parent" writable="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <function name="io_create_directory_if_needed"
              c:identifier="gxr_io_create_directory_if_needed">
      <source-position filename="src/gxr-io.h" line="18"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="path" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_get_cache_path" c:identifier="gxr_io_get_cache_path">
      <source-position filename="src/gxr-io.h" line="27"/>
      <return-value transfer-ownership="full">
        <type name="GLib.String" c:type="GString*"/>
      </return-value>
      <parameters>
        <parameter name="dir_name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_write_resource_to_file"
              c:identifier="gxr_io_write_resource_to_file">
      <source-position filename="src/gxr-io.h" line="21"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="res_base_path" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="cache_path" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="file_name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="file_path" transfer-ownership="none">
          <type name="GLib.String" c:type="GString*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
